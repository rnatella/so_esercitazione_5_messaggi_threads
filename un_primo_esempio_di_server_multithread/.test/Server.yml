rules:
  - id: mutex_initialization
    languages: [c]
    severity: ERROR
    message: "È richiesto che il mutex sia definito e inizializzato fuori dal ciclo while(1){...} del server. Si suggerisce di dichiarare una variabile globale di tipo pthread_mutex_t, e di inizializzarla subito prima del ciclo tramite pthread_mutex_init()."
    patterns:
      - pattern: |
          void server(...){
            ...
          }
      - pattern-not: |
          void server(...){
            ...
            pthread_mutex_init(...);
            ...
            while(1) {
              ...
            }
            ...
          }
      - pattern-not: |
          void server(...);

  - id: server_join
    languages: [c]
    severity: ERROR
    message: "In questo esercizio, il thread principale del server NON deve chiamare pthread_join(). Il thread principale deve poter ricevere nuovi messaggi mentre i thread worker sono impegnati ad elaborare i messaggi precedenti."
    pattern: pthread_join(...);

  - id: thread_parameters
    languages: [c]
    severity: ERROR
    message: "Per il passaggio di parametri dal thread principale ai thread worker, è necessario definire una struttura dati per contenere i valori dei parametri; poi, ogni volta che viene creato un thread worker (ossia all'interno del ciclo while), occorre allocare sullo heap una istanza della struttura, e passarla al thread worker tramite pthread_create()."
    patterns:
      - pattern: |
            pthread_create(...);
      - pattern-not-inside: |
            $P = malloc(...);
            ...
            pthread_create(...);

  - id: no_free_parameters
    languages: [c]
    severity: ERROR
    message: "È richiesto che la struttura dati con i parametri del thread worker venga deallocata dallo heap, utilizzando free()."
    patterns:
      - pattern: |
          void server(...){
            ...
            malloc(...);
            ...
          }

          $VOID Prodotto(...){
            ...
          }

      - pattern-not: |
          void server(...){
            ...
            malloc(...);
            ...
          }
          $VOID Prodotto(...){
            ...
            free(...);
            ...
            pthread_exit(NULL);
          }

      # will be catched by another rule
      - pattern-not: |
          void server(...){
            ...
            malloc(...);
            ...
            free(...);
            ...
          }
          $VOID Prodotto(...){
            ...
          }


  - id: free_parameters_worker
    languages: [c]
    severity: ERROR
    message: "La deallocazione deve essere fatta al termine del thread worker. Non è corretto fare la deallocazione nel thread principale, poiché non è previsto che il thread principale attenda la terminazione dei thread worker (non ha modo di conoscere quando il thread worker avrà finito di utilizzare l'area di memoria dinamica)."
    patterns:
      - pattern: |
          void server(...){
            ...
            $P = malloc(...);
            ...
            free(...);
            ...
          }

  - id: critical_section
    languages: [c]
    severity: ERROR
    message: "In questo esercizio, si richiede che la coda delle risposte sia utilizzata in modo mutuamente esclusivo dai thread (la funzione msgsnd() deve essere chiamata all'interno di una sezione critica)."
    patterns:
      - pattern: msgsnd(...);
      - pattern-not-inside: |
          pthread_mutex_lock(...);
          ...
          msgsnd(...);
          ...
          pthread_mutex_unlock(...);

  - id: unlock-before-exit
    languages: [c]
    severity: ERROR
    message: "È necessario che pthread_mutex_unlock() sia chiamata PRIMA di pthread_exit(). Altrimenti, il thread termina senza rilasciare il mutex, bloccando i futuri accessi da parte degli altri thread."
    patterns:
      - pattern: pthread_mutex_unlock(...);
      - pattern-not-inside: |
          pthread_mutex_unlock(...);
          ...
          pthread_exit(NULL);

  - id: no-var-condition
    languages: [c]
    severity: ERROR
    message: "In questo esercizio, NON bisogna utilizzare nessuna variabile condition. L'esercizio richiede solamente la mutua esclusione."
    pattern: pthread_cond_t $CV;

  - id: no-mutex-in-msg
    languages: [c]
    severity: ERROR
    message: "NON è corretto dichiarare un mutex all'interno della struttura dati per i messaggi. Nel programma vi deve essere un unico mutex, che sarà condiviso da tutti i thread. Se si inserisse il mutex nel messaggio, verrebbe creato un mutex diverso per ogni messaggio."
    pattern: |
      pthread_mutex_init(<... $MSG ...>, ...);
      ...
      msgrcv(...,<... $MSG ...>,...);
